# Values for configuring the deployment of TimescaleDB
# The charts README is at: 
#    https://github.com/timescale/timescaledb-kubernetes/tree/master/charts/timescaledb-single
# Check out the various configuration options (administration guide) at: 
#    https://github.com/timescale/timescaledb-kubernetes/blob/master/charts/timescaledb-single/admin-guide.md
timescaledb-single:
  # disable the chart if an existing TimescaleDB instance is used
  enabled: true
  # create only a ClusterIP service
  loadBalancer: 
    enabled: false
  # number or TimescaleDB pods to spawn (default is 3, 1 for no HA)
  replicaCount: 1


# Values for configuring the deployment of the Timescale Prometheus Connector
# The charts README is at:
#   https://github.com/timescale/timescale-prometheus/tree/master/helm-chart
timescale-prometheus:
  enabled: true
  # connection options
  connection:
    # user to connect to TimescaleDB with
    # user: postgres
    # The secret containing the password for the user used 
    # to connect to the database needs to be created before 
    # installing the chart.
    # If using the timescaledb helm chart (yes by default)
    # and the credentials it creates
    # this is set to "{{ .Release.Name }}-timescaledb-passwords"
    # use:
    # password:
    #  secretTemplate: "already-existing-secret"
    # to change the secret name by setting either a template or a string
    
    # db host by default configured to "{{ .Release.Name }}.default.svc.cluster.local"
    # use:
    # host:
    #  nameTemplate: "{{ .Release.Name }}.default.svc.cluster.local"
    # to change host name by setting either a template or a string
  
  # configuration options for the service exposed by timescale-prometheus
  service:
    # we disable the load balancer by default, only a ClusterIP service
    # will get created
    loadBalancer:
      enabled: false    
  resources:
    requests:
      # By default this should be enough for a cluster 
      # with only a few pods
      memory: 2Gi
      cpu: 1
  # configuration options for the prometheus remote_write
  # these options are not used by the timescale-prometheus chart
  # but by the prometheus server chart
  remote:
    # queue config 
    # see: https://prometheus.io/docs/practices/remote_write/
    queue:
      max_shards: 30
# Values for configuring the deployment of Prometheus
# The stable/prometheus chart is used and the guide for it
# can be found at: 
#   https://hub.helm.sh/charts/stable/prometheus
prometheus:
  enabled: true
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  server:
    # we provide a config map which will have the
    # timescale-prometheus connector already configured as
    # a remote endpoint for read/write (if enabled)
    configMapOverrideName: "prometheus-config"
    
# Values for configuring the deployment of Grafana
# The stable/grafana chart is used and the guide for it
# can be found at:
#   https://hub.helm.sh/charts/stable/grafana
grafana:
  enabled: true
  sidecar:
    datasources:
      enabled: true